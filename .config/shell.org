:DOC-CONFIG:
# Tangle by default to ~/.zshrc which is the most common case
#+property: header-args:sh :tangle ~/.zshrc
#+property: header-args :mkdirp yes :comments no
#+startup: fold
:END:

#title Shell Configuration

* Headers
** ~~/.profile~
#+begin_src sh :tangle ~/.profile
# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# DO NOT EDIT THIS FILE DIRECTLY

#+end_src
** ~~/.zshrc~
#+begin_src sh
# DO NOT EDIT THIS FILE DIRECTLY

#+end_src
** ~~/.terminalrc~
#+begin_src sh :tangle ~/.terminalrc
# DO NOT EDIT THIS FILE DIRECTLY

#+end_src
* Environment
** Path
Set the path inside of ~~/.profile~ so that the rare ~bash~ or ~sh~ shell can use it.
#+begin_src sh :tangle ~/.profile
PATH="$HOME/bin:$HOME/.local/bin:$PATH"
#+end_src
** Misc.
Set the GTK theme.
#+begin_src sh :tangle ~/.profile
export GTK_THEME='Arc:dark'
#+end_src
* Software
** MOTD
Set a message of the day to run on startup
#+begin_src sh :tangle ~/.terminalrc
if ! [ $(id -u) = 0 ]; then
  MOTD="$(fortune -e fortunes | cowsay)\n"
  MOTD="$MOTD We are $(id -un)@$(hostname)."
  MOTD="$MOTD It is $(date +'%A, %d %B %Y') -"
  MOTD="$MOTD That's day $(~/bin/jdate -e normalcy) of this new normal.\n"
  if [ -f /usr/bin/genie ]; then
    if [[ -v INSIDE_GENIE ]]; then
      MOTD="$MOTD WSL Genie ON.\n"
    fi
  fi
  printf "$MOTD" | lolcat
fi
#+end_src
** zsh
*** Startup
Load the MOTD and enable the p10k instant prompt.
The instant prompt should stay close to the top of ~~/.zshrc~.
Initialization code that may require console input (password prompts, [y/n]
confirmations, etc.) must go above this block; everything else may go below.
#+name: zshrc_header
#+begin_src sh
[ -f ~/.terminalrc ] && source ~/.terminalrc
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi
[ -f ~/.profile ] && source ~/.profile
#+end_src
*** Plugins
Use Antigen and  ~oh-my-zsh~.
#+begin_src sh
source $HOME/.antigen/antigen.zsh
antigen use oh-my-zsh
#+end_src
Use p10k prompt.
#+begin_src sh
antigen theme romkatv/powerlevel10k
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
#+end_src
Enable syntax highlighting, completions, and autosuggestions.
#+begin_src sh
antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle zsh-users/zsh-completions
antigen bundle zsh-users/zsh-autosuggestions
autoload -U compinit && compinit
#+end_src
Enable ~vi~ mode.
#+begin_src sh
antigen bundle vi-mode
#+end_src
Apply plugin configuration.
#+begin_src sh
antigen apply
#+end_src
*** Keybinds
Make backspace behave as expected.
#+begin_src sh
bindkey '^[[3~' delete-char
bindkey -a '^[[3~' delete-char
#+end_src
Use the standard ~kj~ to escape Vim.
#+begin_src sh
export KEYTIMEOUT=10
bindkey -M viins 'kj' vi-cmd-mode
#+end_src
Accept autosuggestions with ~<C-j>~.
#+begin_src sh
bindkey -r '^j'
bindkey '^j' autosuggest-accept # similar to deoplete
#+end_src
Make it easier to navigate up and down history.
#+begin_src sh
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey '^[[A' up-line-or-beginning-search
bindkey '^[[B' down-line-or-beginning-search
bindkey -M vicmd 'k' up-line-or-beginning-search
bindkey -M vicmd 'j' down-line-or-beginning-search
#+end_src
*** Misc.
**** ~zmv~
Enable the ~zmv~ utility.
#+begin_src sh
autoload zmv
#+end_src
**** fzf
Load fzf.
#+begin_src sh
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
#+end_src
Bind ~<C-k>~ to history search.
#+begin_src sh
function fzf-history {
	BUFFER=$( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf +s --tac | sed -r 's/ *[0-9]*\*? *//' | sed -r 's/\\/\\\\/g' )
}
zle -N fzf-history
bindkey '^k' fzf-history
#+end_src
**** Paste
Fix pasting.
#+begin_src sh
pasteinit() {
  OLD_SELF_INSERT=${${(s.:.)widgets[self-insert]}[2,3]}
  zle -N self-insert url-quote-magic # I wonder if you'd need `.url-quote-magic`?
}

pastefinish() {
  zle -N self-insert $OLD_SELF_INSERT
}
zstyle :bracketed-paste-magic paste-init pasteinit
zstyle :bracketed-paste-magic paste-finish pastefinish
#+end_src

** Emacs
Set Emacs as the default editor.
#+begin_src sh
export EDITOR='emacs'
#+end_src
Add Doom scripts to the path.
#+begin_src sh :tangle ~/.profile
export PATH="$PATH:$HOME/.config/emacs/bin"
#+end_src
Ensure that a server is always started/running.
#+begin_src sh
alias emacs='emacsclient -a "" -c'
#+end_src
Set Evil-mode keybindings in the shell.
#+begin_src sh
alias :e="$EDITOR"
alias :q='exit'
alias :wq='exit'
#+end_src
** Python
Enable ~pyenv~.
#+begin_src sh
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
#+end_src
** Ruby
Add Ruby to the path.
#+begin_src sh :tangle ~/.profile
export GEM_HOME="$(ruby -r rubygems -e 'puts Gem.user_dir')"
if which ruby >/dev/null && which gem >/dev/null; then
    export PATH="$PATH:$GEM_HOME/bin:$(ruby -r rubygems -e "puts Gem.default_dir")/bin"
fi
#+end_src
** Perl
Add Perl modules to the path.
#+begin_src sh :tangle ~/.profile
export PATH="$PATH:/usr/bin/vendor_perl"
#+end_src
* Aliases
** QoL
Navigation aliases.
#+begin_src sh
alias ..='cd ..'
alias ...='cd ../../../'
alias ....='cd ../../../../'
alias .....='cd ../../../../'
#+end_src
Human-readable output.
#+begin_src sh
alias ll='ls -lah'
alias df='df -h'
alias du='du -h'
#+end_src
Easier directory creation.
#+begin_src sh
alias mkdir='mkdir -pv'
mcd() {
    mkdir -p $1
    cd $1
}
#+end_src
** Software
Manage dotfiles.
#+begin_src sh
alias dotfiles='git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'
#+end_src
Alert boxes.
#+begin_src sh
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
#+end_src
* WSL
** Path
Include Windows script paths if we are inside WSL.
#+begin_src sh :tangle ~/.profile
if [ -n "$WSL_DISTRO_NAME" ]; then
  export PATH="$PATH:/mnt/c/Users/retro/Programs/bin"
  export PATH="$PATH:/mnt/c/Users/retro/AppData/Local/Programs/Microsoft VS Code/bin"
  export PATH="$PATH:/mnt/c/Users/retro/Documents/CodingStuff/scripts/bin"
fi
#+end_src
** Hardware Acceleration
Enable hardware acceleration.
#+begin_src sh :tangle ~/.profile
if [ -n "$WSL_DISTRO_NAME" ]; then
  export LIBGL_ALWAYS_INDIRECT=1
fi
#+end_src
*** ffmpeg
On Windows, ffmpeg should be hardware accelerated.
#+begin_src sh
if [ -n "$WSL_DISTRO_NAME" ]; then
  alias ffmpeg='/mnt/c/Users/retro/Programs/ffmpeg/bin/ffmpeg.exe -hwaccel auto'
fi
#+end_src

